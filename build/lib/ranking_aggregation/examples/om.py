import numpy as np

# This file contains profiles of rankings with different characteristics

################################ 4 ALTERNATIVES ################################
om4_1 = np.array([  [0,9,9,6],
                    [1,0,8,3],
                    [1,2,0,3],
                    [4,7,7,0]])

################################ 5 ALTERNATIVES ################################
om5_1 = np.array([  [0,5,7,5,7],
                    [5,0,4,4,5],
                    [3,6,0,6,6],
                    [5,6,4,0,5],
                    [3,5,4,5,0]])
# 1              2 C1 ≻ C5 ≻ C3 ≻ C2 ≻ C4
# 2              1 C2 ≻ C4 ≻ C5 ≻ C3 ≻ C1
# 3              2 C5 ≻ C4 ≻ C3 ≻ C2 ≻ C1
# 4              1 C1 ≻ C2 ≻ C3 ≻ C4 ≻ C5
# 5              2 C3 ≻ C2 ≻ C1 ≻ C4 ≻ C5
# 6              2 C2 ≻ C5 ≻ C4 ≻ C1 ≻ C3
#   C1 C2 C3 C4 C5
# 1  1  4  3  5  2
# 2  5  1  4  2  3
# 3  5  4  3  2  1
# 4  1  2  3  4  5
# 5  3  2  1  4  5
# 6  4  1  5  3  2

om5_2 = np.array([  [0,5,7,4,6],
                    [5,0,6,6,4],
                    [3,4,0,3,5],
                    [6,4,7,0,5],
                    [4,6,5,5,0]])
#   numberOfVoters                ranking
# 1              1 C3 ≻ C2 ≻ C4 ≻ C1 ≻ C5
# 2              1 C3 ≻ C4 ≻ C1 ≻ C2 ≻ C5
# 3              3 C5 ≻ C2 ≻ C4 ≻ C1 ≻ C3
# 4              2 C1 ≻ C4 ≻ C2 ≻ C3 ≻ C5
# 5              1 C4 ≻ C5 ≻ C3 ≻ C2 ≻ C1
# 6              1 C1 ≻ C3 ≻ C5 ≻ C2 ≻ C4
# 7              1 C1 ≻ C5 ≻ C2 ≻ C4 ≻ C3
#   C1 C2 C3 C4 C5
# 1  4  2  1  3  5
# 2  3  4  1  2  5
# 3  4  2  5  3  1
# 4  1  3  4  2  5
# 5  5  4  3  1  2
# 6  1  4  2  5  3
# 7  1  3  5  4  2

################################ 6 ALTERNATIVES ################################

om6_1 = np.array([  [0, 7, 5,  8, 6, 6],
                    [3, 0, 2,  4, 3, 2],
                    [5, 8, 0, 10, 9, 7],
                    [2, 6, 0,  0, 6, 4],
                    [4, 7, 1,  4, 0, 7],
                    [4, 8, 3,  6, 3, 0]])
#   numberOfVoters                     ranking
# 1              4 C1 ≻ C3 ≻ C4 ≻ C5 ≻ C6 ≻ C2
# 2              1 C5 ≻ C6 ≻ C2 ≻ C3 ≻ C1 ≻ C4
# 3              1 C3 ≻ C6 ≻ C5 ≻ C1 ≻ C2 ≻ C4
# 4              1 C3 ≻ C1 ≻ C5 ≻ C2 ≻ C6 ≻ C4
# 5              2 C6 ≻ C3 ≻ C4 ≻ C2 ≻ C5 ≻ C1
# 6              1 C1 ≻ C2 ≻ C3 ≻ C5 ≻ C6 ≻ C4
#   C1 C2 C3 C4 C5 C6
# 1  1  6  2  3  4  5
# 2  5  3  4  6  1  2
# 3  4  5  1  6  3  2
# 4  2  4  1  6  3  5
# 5  6  4  2  3  5  1
# 6  1  2  3  6  4  5

################################ 7 ALTERNATIVES ################################

om7_1 = np.array([  [0,8,8,5,9,6,8],
                    [2,0,4,2,5,2,7],
                    [2,6,0,3,6,4,8],
                    [5,8,7,0,7,8,8],
                    [1,5,4,3,0,2,8],
                    [4,8,6,2,8,0,8],
                    [2,3,2,2,2,2,0]])

################################ 8 ALTERNATIVES ################################

# no condorcet winner
om8_1 = np.array([  [0,  2,  4,  2,  4, 10,  5,  7],
                    [8,  0,  8,  2,  7,  8,  5,  5],
                    [6,  2,  0,  0,  2, 10,  5,  5],
                    [8,  8, 10,  0,  5, 10,  8, 10],
                    [6,  3,  8,  5,  0,  8,  5,  5],
                    [0,  2,  0,  0,  2,  0,  0,  0],
                    [5,  5,  5,  2,  5, 10,  0,  7],
                    [3,  5,  5,  0,  5, 10,  3,  0]])
#   numberOfVoters                               ranking
# 1              3 C5 ≻ C4 ≻ C2 ≻ C3 ≻ C1 ≻ C7 ≻ C8 ≻ C6
# 2              2 C2 ≻ C1 ≻ C5 ≻ C4 ≻ C3 ≻ C7 ≻ C8 ≻ C6
# 3              2 C7 ≻ C4 ≻ C1 ≻ C8 ≻ C3 ≻ C6 ≻ C2 ≻ C5
# 4              3 C4 ≻ C8 ≻ C7 ≻ C2 ≻ C5 ≻ C3 ≻ C1 ≻ C6
#   C1 C2 C3 C4 C5 C6 C7 C8
# 1  5  3  4  2  1  8  6  7
# 2  2  1  5  4  3  8  6  7
# 3  3  7  5  2  8  6  1  4
# 4  7  4  6  1  5  8  3  2

#    C1 C2 C3 C4 C5 C6 C7 C8
# C1  0  2  3  5  5  6  6  5
# C2  8  0  6  8  5  7  7  7
# C3  7  4  0  6  7  7  8  7
# C4  5  2  4  0  4  5  4  4
# C5  5  5  3  6  0  7  5  4
# C6  4  3  3  5  3  0  5  5
# C7  4  3  2  6  5  5  0  5
# C8  5  3  3  6  6  5  5  0
#    numberOfVoters                               ranking
# 1               1 C4 ≻ C2 ≻ C8 ≻ C3 ≻ C7 ≻ C5 ≻ C1 ≻ C6
# 2               1 C5 ≻ C2 ≻ C1 ≻ C3 ≻ C6 ≻ C7 ≻ C8 ≻ C4
# 3               1 C3 ≻ C8 ≻ C1 ≻ C2 ≻ C4 ≻ C5 ≻ C6 ≻ C7
# 4               1 C5 ≻ C6 ≻ C2 ≻ C8 ≻ C3 ≻ C7 ≻ C1 ≻ C4
# 5               1 C1 ≻ C3 ≻ C7 ≻ C5 ≻ C8 ≻ C2 ≻ C4 ≻ C6
# 6               1 C3 ≻ C8 ≻ C5 ≻ C4 ≻ C2 ≻ C1 ≻ C7 ≻ C6
# 7               1 C2 ≻ C1 ≻ C8 ≻ C7 ≻ C6 ≻ C5 ≻ C4 ≻ C3
# 8               1 C3 ≻ C5 ≻ C6 ≻ C7 ≻ C2 ≻ C4 ≻ C8 ≻ C1
# 9               1 C6 ≻ C2 ≻ C4 ≻ C3 ≻ C1 ≻ C7 ≻ C8 ≻ C5
# 10              1 C7 ≻ C2 ≻ C4 ≻ C3 ≻ C6 ≻ C1 ≻ C8 ≻ C5
#    C1 C2 C3 C4 C5 C6 C7 C8
# 1   7  2  4  1  6  8  5  3
# 2   3  2  4  8  1  5  6  7
# 3   3  4  1  5  6  7  8  2
# 4   7  3  5  8  1  2  6  4
# 5   1  6  2  7  4  8  3  5
# 6   6  5  1  4  3  8  7  2
# 7   2  1  8  7  6  5  4  3
# 8   8  5  1  6  2  3  4  7
# 9   5  2  4  3  8  1  6  7
# 10  6  2  4  3  8  5  1  7


################################ 9 ALTERNATIVES ################################

om9_1 = np.array([  [0, 5, 6, 6, 7, 7, 4, 5, 5],
                    [5, 0, 5, 6, 7, 7, 4, 5, 5],
                    [4, 5, 0, 5, 5, 7, 5, 8, 6],
                    [4, 4, 5, 0, 7, 5, 3, 5, 5],
                    [3, 3, 5, 3, 0, 7, 2, 5, 5],
                    [3, 3, 3, 5, 3, 0, 0, 3, 5],
                    [6, 6, 5, 7, 8,10, 0, 6, 9],
                    [5, 5, 2, 5, 5, 7, 4, 0, 7],
                    [5, 5, 4, 5, 5, 5, 1, 3, 0]])


############################### 10 ALTERNATIVES ################################
om10_1 = np.array([ [0,4,4,4,4,5,4,5,3,2],
                    [6,0,6,3,3,6,4,6,7,3],
                    [6,4,0,3,5,7,6,6,6,3],
                    [6,7,7,0,5,6,5,7,7,4],
                    [6,7,5,5,0,3,3,7,6,5],
                    [5,4,3,4,7,0,4,6,5,2],
                    [6,6,4,5,7,6,0,6,6,4],
                    [5,4,4,3,3,4,4,0,5,1],
                    [7,3,4,3,4,5,4,5,0,2],
                    [8,7,7,6,5,8,6,9,8,0]])
#    C1 C2 C3 C4 C5 C6 C7 C8 C9 C10
# 1  10  6  9  5  3  1  2  8  7   4
# 2   4  5  6  1  2 10  7  8  9   3
# 3   1  6  4  2 10  8  7  3  9   5
# 4  10  9  4  2  6  5  7  3  8   1 
# 5   4  5  8 10  7  6  3  9  2   1
# 6   8  2  6  1  9  7  4 10  3   5
# 7   3  2  8  5  1  6 10  7  9   4
# 8  10  7  1  9  4  3  2  6  8   5
# 9   6 10  3  8  9  4  7  5  1   2
# 10  9  4  5  3  2 10  1  8  7   6
#    numberOfVoters                                          ranking
# 1               1 C6 ≻ C7 ≻ C5 ≻ C10 ≻ C4 ≻ C2 ≻ C9 ≻ C8 ≻ C3 ≻ C1
# 2               1 C4 ≻ C5 ≻ C10 ≻ C1 ≻ C2 ≻ C3 ≻ C7 ≻ C8 ≻ C9 ≻ C6
# 3               1 C1 ≻ C4 ≻ C8 ≻ C3 ≻ C10 ≻ C2 ≻ C7 ≻ C6 ≻ C9 ≻ C5
# 4               1 C10 ≻ C4 ≻ C8 ≻ C3 ≻ C6 ≻ C5 ≻ C7 ≻ C9 ≻ C2 ≻ C1
# 5               1 C10 ≻ C9 ≻ C7 ≻ C1 ≻ C2 ≻ C6 ≻ C5 ≻ C3 ≻ C8 ≻ C4
# 6               1 C4 ≻ C2 ≻ C9 ≻ C7 ≻ C10 ≻ C3 ≻ C6 ≻ C1 ≻ C5 ≻ C8
# 7               1 C5 ≻ C2 ≻ C1 ≻ C10 ≻ C4 ≻ C6 ≻ C8 ≻ C3 ≻ C9 ≻ C7
# 8               1 C3 ≻ C7 ≻ C6 ≻ C5 ≻ C10 ≻ C8 ≻ C2 ≻ C9 ≻ C4 ≻ C1
# 9               1 C9 ≻ C10 ≻ C3 ≻ C6 ≻ C8 ≻ C1 ≻ C7 ≻ C4 ≻ C5 ≻ C2
# 10              1 C7 ≻ C5 ≻ C4 ≻ C2 ≻ C3 ≻ C10 ≻ C9 ≻ C8 ≻ C1 ≻ C6

############################### 13 ALTERNATIVES ################################

# Profile of rankings:
#    C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13
# 1   9  1  8 11  7 10  3  6  5  13   2   4  12
# 2  13 10  4  6  3  8  2  5  9  11  12   7   1
# 3   1 13  3  4  6 10  8 12  7   5   9   2  11
# 4   1 11  2  6  7  4  9 10  3   8   5  13  12
# 5   7  8  1  9 11  6  5 10 13   2   3  12   4
# 6   4 10  5  1  7 11  6  2 12   3   8  13   9
# 7   9  2  4  7  8 10  1  3 12  13   6   5  11
# 8   8 11  9 13  4  7  3 12  5   1   6   2  10
# 9   1  5  3  9 11 13  4  7 10   2   8   6  12
# 10  4 10  2 11  7  9  5  1  3  13   6   8  12

# no condorcer winner
om13_1 = np.array([ [0, 7, 5, 7, 6, 7, 5, 5, 6, 6, 5, 6, 8],
                    [3, 0, 2, 6, 4, 4, 1, 5, 5, 4, 4, 6, 5],
                    [5, 8, 0, 9, 7, 9, 6, 6, 8, 7, 8, 7, 9],
                    [3, 4, 1, 0, 6, 5, 3, 4, 6, 7, 3, 4, 7],
                    [4, 6, 3, 4, 0, 8, 2, 4, 6, 5, 4, 5, 8],
                    [3, 6, 1, 5, 2, 0, 1, 4, 4, 5, 2, 3, 6],
                    [5, 9, 4, 7, 8, 9, 0, 8, 7, 4, 7, 8, 8],
                    [5, 5, 4, 6, 6, 6, 2, 0, 6, 5, 5, 6, 6],
                    [4, 5, 2, 4, 4, 6, 3, 4, 0, 5, 5, 3, 6],
                    [4, 6, 3, 3, 5, 5, 6, 5, 5, 0, 6, 5, 6],
                    [5, 6, 2, 7, 6, 8, 3, 5, 5, 4, 0, 5, 9],
                    [4, 4, 3, 6, 5, 7, 2, 4, 7, 5, 5, 0, 6],
                    [2, 5, 1, 3, 2, 4, 2, 4, 4, 4, 1, 4, 0]])

############################### 14 ALTERNATIVES ################################

# Profile of rankings:
#    C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14
# 1   8 13  6 11  3  2  7 10  1   5   9   4  14  12
# 2   1  5 12 13  6 14 10  2  3   7   4  11   9   8
# 3   9 10  4  5 14  2  6  7 11   3   1  13  12   8
# 4   7 12 13  6  9  4 11 10  2   8   1   3   5  14
# 5   7  4  5  6 11 12  2 10 13   8   3   1  14   9
# 6   9  4  8 12  5  7  3  2 10  13   6  11  14   1
# 7   2 11  3  7  9  1 10  4  8  14   5  12  13   6
# 8  13  9  7  2  5  6  1 11  3  10  12   8   4  14
# 9  12  1  7 11  6 10  2  5  4   3   9  13   8  14
# 10 13  8 10  6  1 14  4 11  2  12   5   3   9   7

# no condorcet winner
om14_1 = np.array([ [0, 5, 3, 4, 5, 3, 3, 5, 5, 5, 3, 5, 6, 7],
                    [5, 0, 6, 4, 5, 5, 2, 4, 4, 7, 3, 5, 8, 5],
                    [7, 4, 0, 7, 3, 4, 3, 6, 4, 5, 4, 5, 6, 7],
                    [6, 6, 3, 0, 5, 4, 3, 5, 4, 6, 1, 4, 7, 7],
                    [5, 5, 7, 5, 0, 6, 5, 4, 3, 6, 5, 7, 7, 6],
                    [7, 5, 6, 6, 4, 0, 4, 5, 4, 6, 3, 6, 6, 6],
                    [7, 8, 7, 7, 5, 6, 0, 6, 5, 6, 6, 6, 8, 7],
                    [5, 6, 4, 5, 6, 5, 4, 0, 5, 4, 5, 5, 7, 7],
                    [5, 6, 6, 6, 7, 6, 5, 5, 0, 7, 5, 9,10, 6],
                    [5, 3, 5, 4, 4, 4, 4, 6, 3, 0, 3, 3, 6, 7],
                    [7, 7, 6, 9, 5, 7, 4, 5, 5, 7, 0, 6, 8, 9],
                    [5, 5, 5, 6, 3, 4, 4, 5, 1, 7, 4, 0, 6, 6],
                    [4, 2, 4, 3, 3, 4, 2, 3, 0, 4, 2, 4, 0, 3],
                    [3, 5, 3, 3, 4, 4, 3, 3, 4, 3, 1, 4, 7, 0]])

om14_2 = np.array([ [0,5,6,6,5,5,7,7,6,7,7,7,4,6],
                    [5,0,6,4,5,3,4,6,5,4,6,6,2,4],
                    [4,4,0,4,4,3,4,5,4,4,4,2,3,5],
                    [4,6,6,0,4,4,7,6,6,5,6,6,2,4],
                    [5,5,6,6,0,5,5,8,6,4,5,7,3,6],
                    [5,7,7,6,5,0,6,7,6,6,6,5,4,5],
                    [3,6,6,3,5,4,0,5,6,3,5,7,3,4],
                    [3,4,5,4,2,3,5,0,4,3,6,4,3,5],
                    [4,5,6,4,4,4,4,6,0,4,6,6,2,5],
                    [3,6,6,5,6,4,7,7,6,0,6,6,4,6],
                    [3,4,6,4,5,4,5,4,4,4,0,3,3,5],
                    [3,4,8,4,3,5,3,6,4,4,7,0,2,5],
                    [6,8,7,8,7,6,7,7,8,6,7,8,0,8],
                    [4,6,5,6,4,5,6,5,5,4,5,5,2,0]])
#    C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14
# 1   1 10  8 14  7  9  4 13 11   2   3   6   5  12
# 2  12  8  2  5 10  1 11 13  9   7   4  14   3   6
# 3   5  4 11  7  9  1  8 14  3  13  12  10   2   6
# 4   5  2 12  4  3  8 14  9  6  10  11   7   1  13
# 5   8 10  3  9  4  1 11  6 12   2  13   5  14   7
# 6   3 10 14  7  4  8  9 12  6   2  13  11   1   5
# 7  12  8  9  2 14 11  4  3  6  13  10   5   1   7
# 8   3  8 12 10  1 14  6  2  7   4  11   9   5  13
# 9  12  9 11  7  4  6  3 14  8  13   2  10   1   5
# 10  1 11  8  9 13  6 10  3 12   2   7   5  14   4


om14_3 = np.array([ [0,9,6,3,6,3,5,3,5,4,4,5,6,5],
                    [1,0,2,1,4,2,2,1,1,2,1,0,3,1],
                    [4,8,0,3,6,3,5,2,3,3,3,4,4,4],
                    [7,9,7,0,7,7,6,6,6,5,7,6,6,7],
                    [4,6,4,3,0,3,4,3,4,2,4,4,5,3],
                    [7,8,7,3,7,0,6,5,5,6,5,6,6,7],
                    [5,8,5,4,6,4,0,3,4,4,5,4,5,4],
                    [7,9,8,4,7,5,7,0,5,4,7,8,6,8],
                    [5,9,7,4,6,5,6,5,0,4,6,7,7,5],
                    [6,8,7,5,8,4,6,6,6,0,6,7,6,7],
                    [6,9,7,3,6,5,5,3,4,4,0,4,6,3],
                    [5,0,6,4,6,4,6,2,3,3,6,0,5,5],
                    [4,7,6,4,5,4,5,4,3,4,4,5,0,5],
                    [5,9,6,3,7,3,6,2,5,3,7,5,5,0]])
#     C1 C2 C3 C4 C5 C6 C7 C8 C9 C10 C11 C12 C13 C14
# C1   0  9  6  3  6  3  5  3  5   4   4   5   6   5
# C2   1  0  2  1  4  2  2  1  1   2   1   0   3   1
# C3   4  8  0  3  6  3  5  2  3   3   3   4   4   4
# C4   7  9  7  0  7  7  6  6  6   5   7   6   6   7
# C5   4  6  4  3  0  3  4  3  4   2   4   4   5   3
# C6   7  8  7  3  7  0  6  5  5   6   5   6   6   7
# C7   5  8  5  4  6  4  0  3  4   4   5   4   5   4
# C8   7  9  8  4  7  5  7  0  5   4   7   8   6   8
# C9   5  9  7  4  6  5  6  5  0   4   6   7   7   5
# C10  6  8  7  5  8  4  6  6  6   0   6   7   6   7
# C11  6  9  7  3  6  5  5  3  4   4   0   4   6   3
# C12  5 10  6  4  6  4  6  2  3   3   6   0   5   5
# C13  4  7  6  4  5  4  5  4  3   4   4   5   0   5
# C14  5  9  6  3  7  3  6  2  5   3   7   5   5   0